
R version 3.1.2 (2014-10-31) -- "Pumpkin Helmet"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: i686-pc-linux-gnu (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library(RcppAnnoy)
> 
> set.seed(123)                           # be reproducible
> 
> testGetNNsByVector <- function() {
+     f <- 3
+     a <- new(AnnoyAngular, f)
+ 
+     a$addItem(0, c(1,0,0))
+     a$addItem(1, c(0,1,0))
+     a$addItem(2, c(0,0,1))
+     
+     a$build(10)
+     
+     print(a$getNNsByVector( c(3,2,1), 3 ))  # c(0,1,2) 
+ }
> 
> testGetNNsByItem <- function() {
+     f <- 3
+     a <- new(AnnoyAngular, f)
+ 
+     a$addItem(0, c(2,1,0))
+     a$addItem(1, c(1,2,0))
+     a$addItem(2, c(0,0,1))
+     
+     a$build(10)
+     
+     print(a$getNNsByItem( 0, 4 ))  # c(0,1,2) 
+     print(a$getNNsByItem( 1, 4 ))  # c(1,0,2) 
+ }
> 
> testDist <- function() {
+     f <- 2
+     a <- new(AnnoyAngular, f)
+     a$addItem(0, c(0,1))
+     a$addItem(1, c(1,1))
+     
+     print(a$getDistance(0,1))
+ }
> 
> testDist2 <- function() {
+     f <- 2
+     a <- new(AnnoyAngular, f)
+     a$addItem(0, c(1000,1))
+     a$addItem(1, c(10,1))
+     
+     print(a$getDistance(0,1))
+ }
> 
> testDist3 <- function() {
+     f <- 2
+     a <- new(AnnoyAngular, f)
+     a$addItem(0, c(97,0))
+     a$addItem(1, c(42,42))
+     
+     print(a$getDistance(0,1))
+     print( (1 - 2^(-0.5))^2 + (2^(-0.5))^2)
+ }
> 
> testDistDegen <- function() {
+     f <- 2
+     a <- new(AnnoyAngular, f)
+     a$addItem(0, c(1,0))
+     a$addItem(1, c(0,0))
+     
+     print(a$getDistance(0,1))
+ }
> 
> 
> 
> testGetNNsByVector()
pass 0...
pass 1...
pass 2...
pass 3...
pass 4...
pass 5...
pass 6...
pass 7...
pass 8...
pass 9...
has 23 nodes
[1] 0 1 2
> testGetNNsByItem()
pass 0...
pass 1...
pass 2...
pass 3...
pass 4...
pass 5...
pass 6...
pass 7...
pass 8...
pass 9...
has 23 nodes
[1] 0 1 2
[1] 1 0 2
> testDist()
[1] 0.5857865
> testDist2()
[1] 0.009727607
> testDist3()
[1] 0.5857865
[1] 0.5857864
> testDistDegen()
[1] 2
> 
> proc.time()
   user  system elapsed 
  0.688   0.436   0.693 
